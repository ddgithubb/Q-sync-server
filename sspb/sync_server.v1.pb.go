// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: sync_server.v1.proto

package sspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_DESKTOP DeviceType = 0
	DeviceType_MOBILE  DeviceType = 1
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "DESKTOP",
		1: "MOBILE",
	}
	DeviceType_value = map[string]int32{
		"DESKTOP": 0,
		"MOBILE":  1,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_server_v1_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_sync_server_v1_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{0}
}

type SSMessage_Op int32

const (
	SSMessage_CLOSE                 SSMessage_Op = 0
	SSMessage_HEARTBEAT             SSMessage_Op = 1
	SSMessage_UPDATE_NODE_POSITION  SSMessage_Op = 2
	SSMessage_CONNECT_NODE          SSMessage_Op = 3
	SSMessage_DISCONNECT_NODE       SSMessage_Op = 4
	SSMessage_REPORT_NODE           SSMessage_Op = 5
	SSMessage_SEND_OFFER            SSMessage_Op = 6
	SSMessage_ANSWER_OFFER          SSMessage_Op = 7
	SSMessage_VERIFY_NODE_CONNECTED SSMessage_Op = 8
	SSMessage_INIT_POOL             SSMessage_Op = 9
	SSMessage_ADD_NODE              SSMessage_Op = 10
	SSMessage_REMOVE_NODE           SSMessage_Op = 11
	SSMessage_ADD_USER              SSMessage_Op = 12
	SSMessage_REMOVE_USER           SSMessage_Op = 13
)

// Enum value maps for SSMessage_Op.
var (
	SSMessage_Op_name = map[int32]string{
		0:  "CLOSE",
		1:  "HEARTBEAT",
		2:  "UPDATE_NODE_POSITION",
		3:  "CONNECT_NODE",
		4:  "DISCONNECT_NODE",
		5:  "REPORT_NODE",
		6:  "SEND_OFFER",
		7:  "ANSWER_OFFER",
		8:  "VERIFY_NODE_CONNECTED",
		9:  "INIT_POOL",
		10: "ADD_NODE",
		11: "REMOVE_NODE",
		12: "ADD_USER",
		13: "REMOVE_USER",
	}
	SSMessage_Op_value = map[string]int32{
		"CLOSE":                 0,
		"HEARTBEAT":             1,
		"UPDATE_NODE_POSITION":  2,
		"CONNECT_NODE":          3,
		"DISCONNECT_NODE":       4,
		"REPORT_NODE":           5,
		"SEND_OFFER":            6,
		"ANSWER_OFFER":          7,
		"VERIFY_NODE_CONNECTED": 8,
		"INIT_POOL":             9,
		"ADD_NODE":              10,
		"REMOVE_NODE":           11,
		"ADD_USER":              12,
		"REMOVE_USER":           13,
	}
)

func (x SSMessage_Op) Enum() *SSMessage_Op {
	p := new(SSMessage_Op)
	*p = x
	return p
}

func (x SSMessage_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSMessage_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_server_v1_proto_enumTypes[1].Descriptor()
}

func (SSMessage_Op) Type() protoreflect.EnumType {
	return &file_sync_server_v1_proto_enumTypes[1]
}

func (x SSMessage_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SSMessage_Op.Descriptor instead.
func (SSMessage_Op) EnumDescriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 0}
}

type SSMessage_ReportCode int32

const (
	SSMessage_DISCONNECT_REPORT SSMessage_ReportCode = 0
)

// Enum value maps for SSMessage_ReportCode.
var (
	SSMessage_ReportCode_name = map[int32]string{
		0: "DISCONNECT_REPORT",
	}
	SSMessage_ReportCode_value = map[string]int32{
		"DISCONNECT_REPORT": 0,
	}
)

func (x SSMessage_ReportCode) Enum() *SSMessage_ReportCode {
	p := new(SSMessage_ReportCode)
	*p = x
	return p
}

func (x SSMessage_ReportCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSMessage_ReportCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_server_v1_proto_enumTypes[2].Descriptor()
}

func (SSMessage_ReportCode) Type() protoreflect.EnumType {
	return &file_sync_server_v1_proto_enumTypes[2]
}

func (x SSMessage_ReportCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SSMessage_ReportCode.Descriptor instead.
func (SSMessage_ReportCode) EnumDescriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 1}
}

type PoolBasicNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Path   []uint32 `protobuf:"varint,2,rep,packed,name=path,proto3" json:"path,omitempty"`
}

func (x *PoolBasicNode) Reset() {
	*x = PoolBasicNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolBasicNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolBasicNode) ProtoMessage() {}

func (x *PoolBasicNode) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolBasicNode.ProtoReflect.Descriptor instead.
func (*PoolBasicNode) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{0}
}

func (x *PoolBasicNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PoolBasicNode) GetPath() []uint32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type PoolUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DisplayName string            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Devices     []*PoolDeviceInfo `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *PoolUserInfo) Reset() {
	*x = PoolUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolUserInfo) ProtoMessage() {}

func (x *PoolUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolUserInfo.ProtoReflect.Descriptor instead.
func (*PoolUserInfo) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PoolUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PoolUserInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PoolUserInfo) GetDevices() []*PoolDeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

type PoolDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   string     `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceType DeviceType `protobuf:"varint,2,opt,name=device_type,json=deviceType,proto3,enum=sync_server.v1.DeviceType" json:"device_type,omitempty"`
	DeviceName string     `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *PoolDeviceInfo) Reset() {
	*x = PoolDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDeviceInfo) ProtoMessage() {}

func (x *PoolDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDeviceInfo.ProtoReflect.Descriptor instead.
func (*PoolDeviceInfo) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{2}
}

func (x *PoolDeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PoolDeviceInfo) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_DESKTOP
}

func (x *PoolDeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type PoolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId   string          `protobuf:"bytes,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	PoolName string          `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Users    []*PoolUserInfo `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *PoolInfo) Reset() {
	*x = PoolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolInfo) ProtoMessage() {}

func (x *PoolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolInfo.ProtoReflect.Descriptor instead.
func (*PoolInfo) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{3}
}

func (x *PoolInfo) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *PoolInfo) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *PoolInfo) GetUsers() []*PoolUserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type SSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op  SSMessage_Op `protobuf:"varint,1,opt,name=op,proto3,enum=sync_server.v1.SSMessage_Op" json:"op,omitempty"`
	Key string       `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Data:
	//	*SSMessage_SuccessResponseData_
	//	*SSMessage_UpdateNodePositionData_
	//	*SSMessage_ConnectNodeData_
	//	*SSMessage_DisconnectNodeData_
	//	*SSMessage_ReportNodeData_
	//	*SSMessage_SdpOfferData
	//	*SSMessage_SdpResponseData
	//	*SSMessage_VerifyNodeConnectedData_
	//	*SSMessage_InitPoolData_
	//	*SSMessage_AddNodeData_
	//	*SSMessage_RemoveNodeData_
	//	*SSMessage_AddUserData_
	//	*SSMessage_RemoveUserData_
	Data isSSMessage_Data `protobuf_oneof:"data"`
}

func (x *SSMessage) Reset() {
	*x = SSMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage) ProtoMessage() {}

func (x *SSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage.ProtoReflect.Descriptor instead.
func (*SSMessage) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4}
}

func (x *SSMessage) GetOp() SSMessage_Op {
	if x != nil {
		return x.Op
	}
	return SSMessage_CLOSE
}

func (x *SSMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *SSMessage) GetData() isSSMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SSMessage) GetSuccessResponseData() *SSMessage_SuccessResponseData {
	if x, ok := x.GetData().(*SSMessage_SuccessResponseData_); ok {
		return x.SuccessResponseData
	}
	return nil
}

func (x *SSMessage) GetUpdateNodePositionData() *SSMessage_UpdateNodePositionData {
	if x, ok := x.GetData().(*SSMessage_UpdateNodePositionData_); ok {
		return x.UpdateNodePositionData
	}
	return nil
}

func (x *SSMessage) GetConnectNodeData() *SSMessage_ConnectNodeData {
	if x, ok := x.GetData().(*SSMessage_ConnectNodeData_); ok {
		return x.ConnectNodeData
	}
	return nil
}

func (x *SSMessage) GetDisconnectNodeData() *SSMessage_DisconnectNodeData {
	if x, ok := x.GetData().(*SSMessage_DisconnectNodeData_); ok {
		return x.DisconnectNodeData
	}
	return nil
}

func (x *SSMessage) GetReportNodeData() *SSMessage_ReportNodeData {
	if x, ok := x.GetData().(*SSMessage_ReportNodeData_); ok {
		return x.ReportNodeData
	}
	return nil
}

func (x *SSMessage) GetSdpOfferData() *SSMessage_SDPOfferData {
	if x, ok := x.GetData().(*SSMessage_SdpOfferData); ok {
		return x.SdpOfferData
	}
	return nil
}

func (x *SSMessage) GetSdpResponseData() *SSMessage_SDPResponseData {
	if x, ok := x.GetData().(*SSMessage_SdpResponseData); ok {
		return x.SdpResponseData
	}
	return nil
}

func (x *SSMessage) GetVerifyNodeConnectedData() *SSMessage_VerifyNodeConnectedData {
	if x, ok := x.GetData().(*SSMessage_VerifyNodeConnectedData_); ok {
		return x.VerifyNodeConnectedData
	}
	return nil
}

func (x *SSMessage) GetInitPoolData() *SSMessage_InitPoolData {
	if x, ok := x.GetData().(*SSMessage_InitPoolData_); ok {
		return x.InitPoolData
	}
	return nil
}

func (x *SSMessage) GetAddNodeData() *SSMessage_AddNodeData {
	if x, ok := x.GetData().(*SSMessage_AddNodeData_); ok {
		return x.AddNodeData
	}
	return nil
}

func (x *SSMessage) GetRemoveNodeData() *SSMessage_RemoveNodeData {
	if x, ok := x.GetData().(*SSMessage_RemoveNodeData_); ok {
		return x.RemoveNodeData
	}
	return nil
}

func (x *SSMessage) GetAddUserData() *SSMessage_AddUserData {
	if x, ok := x.GetData().(*SSMessage_AddUserData_); ok {
		return x.AddUserData
	}
	return nil
}

func (x *SSMessage) GetRemoveUserData() *SSMessage_RemoveUserData {
	if x, ok := x.GetData().(*SSMessage_RemoveUserData_); ok {
		return x.RemoveUserData
	}
	return nil
}

type isSSMessage_Data interface {
	isSSMessage_Data()
}

type SSMessage_SuccessResponseData_ struct {
	SuccessResponseData *SSMessage_SuccessResponseData `protobuf:"bytes,3,opt,name=success_response_data,json=successResponseData,proto3,oneof"`
}

type SSMessage_UpdateNodePositionData_ struct {
	UpdateNodePositionData *SSMessage_UpdateNodePositionData `protobuf:"bytes,4,opt,name=update_node_position_data,json=updateNodePositionData,proto3,oneof"`
}

type SSMessage_ConnectNodeData_ struct {
	ConnectNodeData *SSMessage_ConnectNodeData `protobuf:"bytes,5,opt,name=connect_node_data,json=connectNodeData,proto3,oneof"`
}

type SSMessage_DisconnectNodeData_ struct {
	DisconnectNodeData *SSMessage_DisconnectNodeData `protobuf:"bytes,6,opt,name=disconnect_node_data,json=disconnectNodeData,proto3,oneof"`
}

type SSMessage_ReportNodeData_ struct {
	ReportNodeData *SSMessage_ReportNodeData `protobuf:"bytes,7,opt,name=report_node_data,json=reportNodeData,proto3,oneof"`
}

type SSMessage_SdpOfferData struct {
	SdpOfferData *SSMessage_SDPOfferData `protobuf:"bytes,8,opt,name=sdp_offer_data,json=sdpOfferData,proto3,oneof"`
}

type SSMessage_SdpResponseData struct {
	SdpResponseData *SSMessage_SDPResponseData `protobuf:"bytes,9,opt,name=sdp_response_data,json=sdpResponseData,proto3,oneof"`
}

type SSMessage_VerifyNodeConnectedData_ struct {
	VerifyNodeConnectedData *SSMessage_VerifyNodeConnectedData `protobuf:"bytes,10,opt,name=verify_node_connected_data,json=verifyNodeConnectedData,proto3,oneof"`
}

type SSMessage_InitPoolData_ struct {
	InitPoolData *SSMessage_InitPoolData `protobuf:"bytes,11,opt,name=init_pool_data,json=initPoolData,proto3,oneof"`
}

type SSMessage_AddNodeData_ struct {
	AddNodeData *SSMessage_AddNodeData `protobuf:"bytes,12,opt,name=add_node_data,json=addNodeData,proto3,oneof"`
}

type SSMessage_RemoveNodeData_ struct {
	RemoveNodeData *SSMessage_RemoveNodeData `protobuf:"bytes,13,opt,name=remove_node_data,json=removeNodeData,proto3,oneof"`
}

type SSMessage_AddUserData_ struct {
	AddUserData *SSMessage_AddUserData `protobuf:"bytes,14,opt,name=add_user_data,json=addUserData,proto3,oneof"`
}

type SSMessage_RemoveUserData_ struct {
	RemoveUserData *SSMessage_RemoveUserData `protobuf:"bytes,15,opt,name=remove_user_data,json=removeUserData,proto3,oneof"`
}

func (*SSMessage_SuccessResponseData_) isSSMessage_Data() {}

func (*SSMessage_UpdateNodePositionData_) isSSMessage_Data() {}

func (*SSMessage_ConnectNodeData_) isSSMessage_Data() {}

func (*SSMessage_DisconnectNodeData_) isSSMessage_Data() {}

func (*SSMessage_ReportNodeData_) isSSMessage_Data() {}

func (*SSMessage_SdpOfferData) isSSMessage_Data() {}

func (*SSMessage_SdpResponseData) isSSMessage_Data() {}

func (*SSMessage_VerifyNodeConnectedData_) isSSMessage_Data() {}

func (*SSMessage_InitPoolData_) isSSMessage_Data() {}

func (*SSMessage_AddNodeData_) isSSMessage_Data() {}

func (*SSMessage_RemoveNodeData_) isSSMessage_Data() {}

func (*SSMessage_AddUserData_) isSSMessage_Data() {}

func (*SSMessage_RemoveUserData_) isSSMessage_Data() {}

type SSMessage_SuccessResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SSMessage_SuccessResponseData) Reset() {
	*x = SSMessage_SuccessResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_SuccessResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_SuccessResponseData) ProtoMessage() {}

func (x *SSMessage_SuccessResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_SuccessResponseData.ProtoReflect.Descriptor instead.
func (*SSMessage_SuccessResponseData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SSMessage_SuccessResponseData) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SSMessage_UpdateNodePositionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                 []uint32 `protobuf:"varint,1,rep,packed,name=path,proto3" json:"path,omitempty"`
	PartnerInt           uint32   `protobuf:"varint,2,opt,name=partner_int,json=partnerInt,proto3" json:"partner_int,omitempty"`
	CenterCluster        bool     `protobuf:"varint,3,opt,name=center_cluster,json=centerCluster,proto3" json:"center_cluster,omitempty"`
	ParentClusterNodeIds []string `protobuf:"bytes,4,rep,name=parent_cluster_node_ids,json=parentClusterNodeIds,proto3" json:"parent_cluster_node_ids,omitempty"`
	ChildClusterNodeIds  []string `protobuf:"bytes,5,rep,name=child_cluster_node_ids,json=childClusterNodeIds,proto3" json:"child_cluster_node_ids,omitempty"`
}

func (x *SSMessage_UpdateNodePositionData) Reset() {
	*x = SSMessage_UpdateNodePositionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_UpdateNodePositionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_UpdateNodePositionData) ProtoMessage() {}

func (x *SSMessage_UpdateNodePositionData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_UpdateNodePositionData.ProtoReflect.Descriptor instead.
func (*SSMessage_UpdateNodePositionData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 1}
}

func (x *SSMessage_UpdateNodePositionData) GetPath() []uint32 {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SSMessage_UpdateNodePositionData) GetPartnerInt() uint32 {
	if x != nil {
		return x.PartnerInt
	}
	return 0
}

func (x *SSMessage_UpdateNodePositionData) GetCenterCluster() bool {
	if x != nil {
		return x.CenterCluster
	}
	return false
}

func (x *SSMessage_UpdateNodePositionData) GetParentClusterNodeIds() []string {
	if x != nil {
		return x.ParentClusterNodeIds
	}
	return nil
}

func (x *SSMessage_UpdateNodePositionData) GetChildClusterNodeIds() []string {
	if x != nil {
		return x.ChildClusterNodeIds
	}
	return nil
}

type SSMessage_ConnectNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *SSMessage_ConnectNodeData) Reset() {
	*x = SSMessage_ConnectNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_ConnectNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_ConnectNodeData) ProtoMessage() {}

func (x *SSMessage_ConnectNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_ConnectNodeData.ProtoReflect.Descriptor instead.
func (*SSMessage_ConnectNodeData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 2}
}

func (x *SSMessage_ConnectNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type SSMessage_DisconnectNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *SSMessage_DisconnectNodeData) Reset() {
	*x = SSMessage_DisconnectNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_DisconnectNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_DisconnectNodeData) ProtoMessage() {}

func (x *SSMessage_DisconnectNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_DisconnectNodeData.ProtoReflect.Descriptor instead.
func (*SSMessage_DisconnectNodeData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 3}
}

func (x *SSMessage_DisconnectNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type SSMessage_ReportNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     string               `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ReportCode SSMessage_ReportCode `protobuf:"varint,2,opt,name=report_code,json=reportCode,proto3,enum=sync_server.v1.SSMessage_ReportCode" json:"report_code,omitempty"`
}

func (x *SSMessage_ReportNodeData) Reset() {
	*x = SSMessage_ReportNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_ReportNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_ReportNodeData) ProtoMessage() {}

func (x *SSMessage_ReportNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_ReportNodeData.ProtoReflect.Descriptor instead.
func (*SSMessage_ReportNodeData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 4}
}

func (x *SSMessage_ReportNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SSMessage_ReportNodeData) GetReportCode() SSMessage_ReportCode {
	if x != nil {
		return x.ReportCode
	}
	return SSMessage_DISCONNECT_REPORT
}

type SSMessage_SDPOfferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNodeId string `protobuf:"bytes,1,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	Sdp        string `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *SSMessage_SDPOfferData) Reset() {
	*x = SSMessage_SDPOfferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_SDPOfferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_SDPOfferData) ProtoMessage() {}

func (x *SSMessage_SDPOfferData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_SDPOfferData.ProtoReflect.Descriptor instead.
func (*SSMessage_SDPOfferData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 5}
}

func (x *SSMessage_SDPOfferData) GetFromNodeId() string {
	if x != nil {
		return x.FromNodeId
	}
	return ""
}

func (x *SSMessage_SDPOfferData) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type SSMessage_SDPResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdp     string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SSMessage_SDPResponseData) Reset() {
	*x = SSMessage_SDPResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_SDPResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_SDPResponseData) ProtoMessage() {}

func (x *SSMessage_SDPResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_SDPResponseData.ProtoReflect.Descriptor instead.
func (*SSMessage_SDPResponseData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 6}
}

func (x *SSMessage_SDPResponseData) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *SSMessage_SDPResponseData) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SSMessage_VerifyNodeConnectedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *SSMessage_VerifyNodeConnectedData) Reset() {
	*x = SSMessage_VerifyNodeConnectedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_VerifyNodeConnectedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_VerifyNodeConnectedData) ProtoMessage() {}

func (x *SSMessage_VerifyNodeConnectedData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_VerifyNodeConnectedData.ProtoReflect.Descriptor instead.
func (*SSMessage_VerifyNodeConnectedData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 7}
}

func (x *SSMessage_VerifyNodeConnectedData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type SSMessage_InitPoolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitNodes []*SSMessage_AddNodeData `protobuf:"bytes,1,rep,name=init_nodes,json=initNodes,proto3" json:"init_nodes,omitempty"`
	PoolInfo  *PoolInfo                `protobuf:"bytes,2,opt,name=pool_info,json=poolInfo,proto3" json:"pool_info,omitempty"`
}

func (x *SSMessage_InitPoolData) Reset() {
	*x = SSMessage_InitPoolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_InitPoolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_InitPoolData) ProtoMessage() {}

func (x *SSMessage_InitPoolData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_InitPoolData.ProtoReflect.Descriptor instead.
func (*SSMessage_InitPoolData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 8}
}

func (x *SSMessage_InitPoolData) GetInitNodes() []*SSMessage_AddNodeData {
	if x != nil {
		return x.InitNodes
	}
	return nil
}

func (x *SSMessage_InitPoolData) GetPoolInfo() *PoolInfo {
	if x != nil {
		return x.PoolInfo
	}
	return nil
}

type SSMessage_AddNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Path   []uint32 `protobuf:"varint,3,rep,packed,name=path,proto3" json:"path,omitempty"`
}

func (x *SSMessage_AddNodeData) Reset() {
	*x = SSMessage_AddNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_AddNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_AddNodeData) ProtoMessage() {}

func (x *SSMessage_AddNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_AddNodeData.ProtoReflect.Descriptor instead.
func (*SSMessage_AddNodeData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 9}
}

func (x *SSMessage_AddNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SSMessage_AddNodeData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SSMessage_AddNodeData) GetPath() []uint32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type SSMessage_RemoveNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId        string           `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PromotedNodes []*PoolBasicNode `protobuf:"bytes,2,rep,name=promoted_nodes,json=promotedNodes,proto3" json:"promoted_nodes,omitempty"`
}

func (x *SSMessage_RemoveNodeData) Reset() {
	*x = SSMessage_RemoveNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_RemoveNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_RemoveNodeData) ProtoMessage() {}

func (x *SSMessage_RemoveNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_RemoveNodeData.ProtoReflect.Descriptor instead.
func (*SSMessage_RemoveNodeData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 10}
}

func (x *SSMessage_RemoveNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SSMessage_RemoveNodeData) GetPromotedNodes() []*PoolBasicNode {
	if x != nil {
		return x.PromotedNodes
	}
	return nil
}

type SSMessage_AddUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *PoolUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *SSMessage_AddUserData) Reset() {
	*x = SSMessage_AddUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_AddUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_AddUserData) ProtoMessage() {}

func (x *SSMessage_AddUserData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_AddUserData.ProtoReflect.Descriptor instead.
func (*SSMessage_AddUserData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 11}
}

func (x *SSMessage_AddUserData) GetUserInfo() *PoolUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type SSMessage_RemoveUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SSMessage_RemoveUserData) Reset() {
	*x = SSMessage_RemoveUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_server_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMessage_RemoveUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMessage_RemoveUserData) ProtoMessage() {}

func (x *SSMessage_RemoveUserData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_server_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMessage_RemoveUserData.ProtoReflect.Descriptor instead.
func (*SSMessage_RemoveUserData) Descriptor() ([]byte, []int) {
	return file_sync_server_v1_proto_rawDescGZIP(), []int{4, 12}
}

func (x *SSMessage_RemoveUserData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_sync_server_v1_proto protoreflect.FileDescriptor

var file_sync_server_v1_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x3c, 0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0e,
	0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0xec, 0x14, 0x0a, 0x09, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x63, 0x0a,
	0x15, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6d, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x57, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x14, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x44, 0x50, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x57, 0x0a, 0x11, 0x73, 0x64, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x64, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x70, 0x0a, 0x1a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x17, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a,
	0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x0c, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4b, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a,
	0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x2f, 0x0a, 0x13, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x1a, 0xe0, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x2a, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x1a, 0x2d, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x1a, 0x70, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a,
	0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0x42, 0x0a, 0x0c, 0x53, 0x44, 0x50, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x44, 0x50, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x32, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x1a, 0x8b, 0x01, 0x0a, 0x0c,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x53, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x6f,
	0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a,
	0x48, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x29, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42,
	0x45, 0x41, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x5f,
	0x4f, 0x46, 0x46, 0x45, 0x52, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x4e, 0x53, 0x57, 0x45,
	0x52, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x59, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x4f,
	0x4c, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10,
	0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x0c,
	0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10,
	0x0d, 0x22, 0x23, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x25,
	0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x10, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x73, 0x73, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sync_server_v1_proto_rawDescOnce sync.Once
	file_sync_server_v1_proto_rawDescData = file_sync_server_v1_proto_rawDesc
)

func file_sync_server_v1_proto_rawDescGZIP() []byte {
	file_sync_server_v1_proto_rawDescOnce.Do(func() {
		file_sync_server_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_sync_server_v1_proto_rawDescData)
	})
	return file_sync_server_v1_proto_rawDescData
}

var file_sync_server_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sync_server_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sync_server_v1_proto_goTypes = []interface{}{
	(DeviceType)(0),                           // 0: sync_server.v1.DeviceType
	(SSMessage_Op)(0),                         // 1: sync_server.v1.SSMessage.Op
	(SSMessage_ReportCode)(0),                 // 2: sync_server.v1.SSMessage.ReportCode
	(*PoolBasicNode)(nil),                     // 3: sync_server.v1.PoolBasicNode
	(*PoolUserInfo)(nil),                      // 4: sync_server.v1.PoolUserInfo
	(*PoolDeviceInfo)(nil),                    // 5: sync_server.v1.PoolDeviceInfo
	(*PoolInfo)(nil),                          // 6: sync_server.v1.PoolInfo
	(*SSMessage)(nil),                         // 7: sync_server.v1.SSMessage
	(*SSMessage_SuccessResponseData)(nil),     // 8: sync_server.v1.SSMessage.SuccessResponseData
	(*SSMessage_UpdateNodePositionData)(nil),  // 9: sync_server.v1.SSMessage.UpdateNodePositionData
	(*SSMessage_ConnectNodeData)(nil),         // 10: sync_server.v1.SSMessage.ConnectNodeData
	(*SSMessage_DisconnectNodeData)(nil),      // 11: sync_server.v1.SSMessage.DisconnectNodeData
	(*SSMessage_ReportNodeData)(nil),          // 12: sync_server.v1.SSMessage.ReportNodeData
	(*SSMessage_SDPOfferData)(nil),            // 13: sync_server.v1.SSMessage.SDPOfferData
	(*SSMessage_SDPResponseData)(nil),         // 14: sync_server.v1.SSMessage.SDPResponseData
	(*SSMessage_VerifyNodeConnectedData)(nil), // 15: sync_server.v1.SSMessage.VerifyNodeConnectedData
	(*SSMessage_InitPoolData)(nil),            // 16: sync_server.v1.SSMessage.InitPoolData
	(*SSMessage_AddNodeData)(nil),             // 17: sync_server.v1.SSMessage.AddNodeData
	(*SSMessage_RemoveNodeData)(nil),          // 18: sync_server.v1.SSMessage.RemoveNodeData
	(*SSMessage_AddUserData)(nil),             // 19: sync_server.v1.SSMessage.AddUserData
	(*SSMessage_RemoveUserData)(nil),          // 20: sync_server.v1.SSMessage.RemoveUserData
}
var file_sync_server_v1_proto_depIdxs = []int32{
	5,  // 0: sync_server.v1.PoolUserInfo.devices:type_name -> sync_server.v1.PoolDeviceInfo
	0,  // 1: sync_server.v1.PoolDeviceInfo.device_type:type_name -> sync_server.v1.DeviceType
	4,  // 2: sync_server.v1.PoolInfo.users:type_name -> sync_server.v1.PoolUserInfo
	1,  // 3: sync_server.v1.SSMessage.op:type_name -> sync_server.v1.SSMessage.Op
	8,  // 4: sync_server.v1.SSMessage.success_response_data:type_name -> sync_server.v1.SSMessage.SuccessResponseData
	9,  // 5: sync_server.v1.SSMessage.update_node_position_data:type_name -> sync_server.v1.SSMessage.UpdateNodePositionData
	10, // 6: sync_server.v1.SSMessage.connect_node_data:type_name -> sync_server.v1.SSMessage.ConnectNodeData
	11, // 7: sync_server.v1.SSMessage.disconnect_node_data:type_name -> sync_server.v1.SSMessage.DisconnectNodeData
	12, // 8: sync_server.v1.SSMessage.report_node_data:type_name -> sync_server.v1.SSMessage.ReportNodeData
	13, // 9: sync_server.v1.SSMessage.sdp_offer_data:type_name -> sync_server.v1.SSMessage.SDPOfferData
	14, // 10: sync_server.v1.SSMessage.sdp_response_data:type_name -> sync_server.v1.SSMessage.SDPResponseData
	15, // 11: sync_server.v1.SSMessage.verify_node_connected_data:type_name -> sync_server.v1.SSMessage.VerifyNodeConnectedData
	16, // 12: sync_server.v1.SSMessage.init_pool_data:type_name -> sync_server.v1.SSMessage.InitPoolData
	17, // 13: sync_server.v1.SSMessage.add_node_data:type_name -> sync_server.v1.SSMessage.AddNodeData
	18, // 14: sync_server.v1.SSMessage.remove_node_data:type_name -> sync_server.v1.SSMessage.RemoveNodeData
	19, // 15: sync_server.v1.SSMessage.add_user_data:type_name -> sync_server.v1.SSMessage.AddUserData
	20, // 16: sync_server.v1.SSMessage.remove_user_data:type_name -> sync_server.v1.SSMessage.RemoveUserData
	2,  // 17: sync_server.v1.SSMessage.ReportNodeData.report_code:type_name -> sync_server.v1.SSMessage.ReportCode
	17, // 18: sync_server.v1.SSMessage.InitPoolData.init_nodes:type_name -> sync_server.v1.SSMessage.AddNodeData
	6,  // 19: sync_server.v1.SSMessage.InitPoolData.pool_info:type_name -> sync_server.v1.PoolInfo
	3,  // 20: sync_server.v1.SSMessage.RemoveNodeData.promoted_nodes:type_name -> sync_server.v1.PoolBasicNode
	4,  // 21: sync_server.v1.SSMessage.AddUserData.user_info:type_name -> sync_server.v1.PoolUserInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_sync_server_v1_proto_init() }
func file_sync_server_v1_proto_init() {
	if File_sync_server_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sync_server_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolBasicNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_SuccessResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_UpdateNodePositionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_ConnectNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_DisconnectNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_ReportNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_SDPOfferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_SDPResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_VerifyNodeConnectedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_InitPoolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_AddNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_RemoveNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_AddUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_server_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMessage_RemoveUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sync_server_v1_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SSMessage_SuccessResponseData_)(nil),
		(*SSMessage_UpdateNodePositionData_)(nil),
		(*SSMessage_ConnectNodeData_)(nil),
		(*SSMessage_DisconnectNodeData_)(nil),
		(*SSMessage_ReportNodeData_)(nil),
		(*SSMessage_SdpOfferData)(nil),
		(*SSMessage_SdpResponseData)(nil),
		(*SSMessage_VerifyNodeConnectedData_)(nil),
		(*SSMessage_InitPoolData_)(nil),
		(*SSMessage_AddNodeData_)(nil),
		(*SSMessage_RemoveNodeData_)(nil),
		(*SSMessage_AddUserData_)(nil),
		(*SSMessage_RemoveUserData_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sync_server_v1_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sync_server_v1_proto_goTypes,
		DependencyIndexes: file_sync_server_v1_proto_depIdxs,
		EnumInfos:         file_sync_server_v1_proto_enumTypes,
		MessageInfos:      file_sync_server_v1_proto_msgTypes,
	}.Build()
	File_sync_server_v1_proto = out.File
	file_sync_server_v1_proto_rawDesc = nil
	file_sync_server_v1_proto_goTypes = nil
	file_sync_server_v1_proto_depIdxs = nil
}
